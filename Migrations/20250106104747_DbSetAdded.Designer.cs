// <auto-generated />
using System;
using BumboApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BumboApp.Migrations
{
    [DbContext(typeof(BumboDbContext))]
    [Migration("20250106104747_DbSetAdded")]
    partial class DbSetAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-rc.1.24451.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BumboApp.Models.Availability", b =>
                {
                    b.Property<int>("EmployeeNumber")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("EmployeeNumber", "Date");

                    b.ToTable("Availabilities", t =>
                        {
                            t.HasCheckConstraint("CK_Availability_StartTime_EndTime", "[StartTime] <= [EndTime]");
                        });

                    b.HasData(
                        new
                        {
                            EmployeeNumber = 2,
                            Date = new DateOnly(2025, 1, 6),
                            EndTime = new TimeOnly(17, 0, 0),
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            EmployeeNumber = 2,
                            Date = new DateOnly(2025, 1, 7),
                            EndTime = new TimeOnly(18, 0, 0),
                            StartTime = new TimeOnly(10, 0, 0)
                        },
                        new
                        {
                            EmployeeNumber = 2,
                            Date = new DateOnly(2025, 1, 8),
                            EndTime = new TimeOnly(15, 0, 0),
                            StartTime = new TimeOnly(11, 0, 0)
                        },
                        new
                        {
                            EmployeeNumber = 2,
                            Date = new DateOnly(2025, 1, 9),
                            EndTime = new TimeOnly(16, 0, 0),
                            StartTime = new TimeOnly(8, 0, 0)
                        },
                        new
                        {
                            EmployeeNumber = 2,
                            Date = new DateOnly(2025, 1, 10),
                            EndTime = new TimeOnly(20, 0, 0),
                            StartTime = new TimeOnly(12, 0, 0)
                        },
                        new
                        {
                            EmployeeNumber = 2,
                            Date = new DateOnly(2025, 1, 11),
                            EndTime = new TimeOnly(14, 0, 0),
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            EmployeeNumber = 2,
                            Date = new DateOnly(2025, 1, 12),
                            EndTime = new TimeOnly(16, 0, 0),
                            StartTime = new TimeOnly(10, 0, 0)
                        },
                        new
                        {
                            EmployeeNumber = 2,
                            Date = new DateOnly(2025, 1, 13),
                            EndTime = new TimeOnly(19, 0, 0),
                            StartTime = new TimeOnly(11, 0, 0)
                        },
                        new
                        {
                            EmployeeNumber = 2,
                            Date = new DateOnly(2025, 1, 14),
                            EndTime = new TimeOnly(17, 0, 0),
                            StartTime = new TimeOnly(13, 0, 0)
                        },
                        new
                        {
                            EmployeeNumber = 2,
                            Date = new DateOnly(2025, 1, 15),
                            EndTime = new TimeOnly(15, 0, 0),
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            EmployeeNumber = 2,
                            Date = new DateOnly(2025, 1, 16),
                            EndTime = new TimeOnly(20, 0, 0),
                            StartTime = new TimeOnly(12, 0, 0)
                        },
                        new
                        {
                            EmployeeNumber = 2,
                            Date = new DateOnly(2025, 1, 17),
                            EndTime = new TimeOnly(18, 0, 0),
                            StartTime = new TimeOnly(10, 0, 0)
                        },
                        new
                        {
                            EmployeeNumber = 2,
                            Date = new DateOnly(2025, 1, 18),
                            EndTime = new TimeOnly(13, 0, 0),
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            EmployeeNumber = 2,
                            Date = new DateOnly(2025, 1, 19),
                            EndTime = new TimeOnly(17, 0, 0),
                            StartTime = new TimeOnly(11, 0, 0)
                        },
                        new
                        {
                            EmployeeNumber = 3,
                            Date = new DateOnly(2025, 1, 6),
                            EndTime = new TimeOnly(17, 30, 0),
                            StartTime = new TimeOnly(9, 30, 0)
                        },
                        new
                        {
                            EmployeeNumber = 3,
                            Date = new DateOnly(2025, 1, 7),
                            EndTime = new TimeOnly(18, 30, 0),
                            StartTime = new TimeOnly(10, 30, 0)
                        },
                        new
                        {
                            EmployeeNumber = 3,
                            Date = new DateOnly(2025, 1, 8),
                            EndTime = new TimeOnly(15, 30, 0),
                            StartTime = new TimeOnly(11, 30, 0)
                        },
                        new
                        {
                            EmployeeNumber = 3,
                            Date = new DateOnly(2025, 1, 9),
                            EndTime = new TimeOnly(16, 30, 0),
                            StartTime = new TimeOnly(8, 30, 0)
                        },
                        new
                        {
                            EmployeeNumber = 3,
                            Date = new DateOnly(2025, 1, 10),
                            EndTime = new TimeOnly(20, 30, 0),
                            StartTime = new TimeOnly(12, 30, 0)
                        },
                        new
                        {
                            EmployeeNumber = 3,
                            Date = new DateOnly(2025, 1, 11),
                            EndTime = new TimeOnly(14, 30, 0),
                            StartTime = new TimeOnly(9, 30, 0)
                        },
                        new
                        {
                            EmployeeNumber = 3,
                            Date = new DateOnly(2025, 1, 12),
                            EndTime = new TimeOnly(16, 30, 0),
                            StartTime = new TimeOnly(10, 30, 0)
                        },
                        new
                        {
                            EmployeeNumber = 3,
                            Date = new DateOnly(2025, 1, 13),
                            EndTime = new TimeOnly(19, 30, 0),
                            StartTime = new TimeOnly(11, 30, 0)
                        },
                        new
                        {
                            EmployeeNumber = 3,
                            Date = new DateOnly(2025, 1, 14),
                            EndTime = new TimeOnly(17, 30, 0),
                            StartTime = new TimeOnly(13, 30, 0)
                        },
                        new
                        {
                            EmployeeNumber = 3,
                            Date = new DateOnly(2025, 1, 15),
                            EndTime = new TimeOnly(15, 30, 0),
                            StartTime = new TimeOnly(9, 30, 0)
                        },
                        new
                        {
                            EmployeeNumber = 3,
                            Date = new DateOnly(2025, 1, 16),
                            EndTime = new TimeOnly(20, 30, 0),
                            StartTime = new TimeOnly(12, 30, 0)
                        },
                        new
                        {
                            EmployeeNumber = 3,
                            Date = new DateOnly(2025, 1, 17),
                            EndTime = new TimeOnly(18, 30, 0),
                            StartTime = new TimeOnly(10, 30, 0)
                        },
                        new
                        {
                            EmployeeNumber = 3,
                            Date = new DateOnly(2025, 1, 18),
                            EndTime = new TimeOnly(13, 30, 0),
                            StartTime = new TimeOnly(9, 30, 0)
                        },
                        new
                        {
                            EmployeeNumber = 3,
                            Date = new DateOnly(2025, 1, 19),
                            EndTime = new TimeOnly(17, 30, 0),
                            StartTime = new TimeOnly(11, 30, 0)
                        },
                        new
                        {
                            EmployeeNumber = 4,
                            Date = new DateOnly(2025, 1, 6),
                            EndTime = new TimeOnly(17, 0, 0),
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            EmployeeNumber = 4,
                            Date = new DateOnly(2025, 1, 7),
                            EndTime = new TimeOnly(18, 0, 0),
                            StartTime = new TimeOnly(10, 0, 0)
                        },
                        new
                        {
                            EmployeeNumber = 4,
                            Date = new DateOnly(2025, 1, 8),
                            EndTime = new TimeOnly(15, 0, 0),
                            StartTime = new TimeOnly(11, 0, 0)
                        },
                        new
                        {
                            EmployeeNumber = 4,
                            Date = new DateOnly(2025, 1, 9),
                            EndTime = new TimeOnly(16, 0, 0),
                            StartTime = new TimeOnly(8, 0, 0)
                        },
                        new
                        {
                            EmployeeNumber = 4,
                            Date = new DateOnly(2025, 1, 10),
                            EndTime = new TimeOnly(20, 0, 0),
                            StartTime = new TimeOnly(12, 0, 0)
                        },
                        new
                        {
                            EmployeeNumber = 4,
                            Date = new DateOnly(2025, 1, 11),
                            EndTime = new TimeOnly(14, 0, 0),
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            EmployeeNumber = 4,
                            Date = new DateOnly(2025, 1, 12),
                            EndTime = new TimeOnly(16, 0, 0),
                            StartTime = new TimeOnly(10, 0, 0)
                        },
                        new
                        {
                            EmployeeNumber = 4,
                            Date = new DateOnly(2025, 1, 13),
                            EndTime = new TimeOnly(19, 0, 0),
                            StartTime = new TimeOnly(11, 0, 0)
                        },
                        new
                        {
                            EmployeeNumber = 4,
                            Date = new DateOnly(2025, 1, 14),
                            EndTime = new TimeOnly(17, 0, 0),
                            StartTime = new TimeOnly(13, 0, 0)
                        },
                        new
                        {
                            EmployeeNumber = 4,
                            Date = new DateOnly(2025, 1, 15),
                            EndTime = new TimeOnly(15, 0, 0),
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            EmployeeNumber = 4,
                            Date = new DateOnly(2025, 1, 16),
                            EndTime = new TimeOnly(20, 0, 0),
                            StartTime = new TimeOnly(12, 0, 0)
                        },
                        new
                        {
                            EmployeeNumber = 4,
                            Date = new DateOnly(2025, 1, 17),
                            EndTime = new TimeOnly(18, 0, 0),
                            StartTime = new TimeOnly(10, 0, 0)
                        },
                        new
                        {
                            EmployeeNumber = 4,
                            Date = new DateOnly(2025, 1, 18),
                            EndTime = new TimeOnly(13, 0, 0),
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            EmployeeNumber = 4,
                            Date = new DateOnly(2025, 1, 19),
                            EndTime = new TimeOnly(17, 0, 0),
                            StartTime = new TimeOnly(11, 0, 0)
                        },
                        new
                        {
                            EmployeeNumber = 5,
                            Date = new DateOnly(2025, 1, 6),
                            EndTime = new TimeOnly(17, 0, 0),
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            EmployeeNumber = 5,
                            Date = new DateOnly(2025, 1, 7),
                            EndTime = new TimeOnly(18, 0, 0),
                            StartTime = new TimeOnly(10, 0, 0)
                        },
                        new
                        {
                            EmployeeNumber = 5,
                            Date = new DateOnly(2025, 1, 8),
                            EndTime = new TimeOnly(15, 0, 0),
                            StartTime = new TimeOnly(11, 0, 0)
                        },
                        new
                        {
                            EmployeeNumber = 5,
                            Date = new DateOnly(2025, 1, 9),
                            EndTime = new TimeOnly(16, 0, 0),
                            StartTime = new TimeOnly(8, 0, 0)
                        },
                        new
                        {
                            EmployeeNumber = 5,
                            Date = new DateOnly(2025, 1, 10),
                            EndTime = new TimeOnly(20, 0, 0),
                            StartTime = new TimeOnly(12, 0, 0)
                        },
                        new
                        {
                            EmployeeNumber = 5,
                            Date = new DateOnly(2025, 1, 11),
                            EndTime = new TimeOnly(14, 0, 0),
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            EmployeeNumber = 5,
                            Date = new DateOnly(2025, 1, 12),
                            EndTime = new TimeOnly(16, 0, 0),
                            StartTime = new TimeOnly(10, 0, 0)
                        },
                        new
                        {
                            EmployeeNumber = 5,
                            Date = new DateOnly(2025, 1, 13),
                            EndTime = new TimeOnly(19, 0, 0),
                            StartTime = new TimeOnly(11, 0, 0)
                        },
                        new
                        {
                            EmployeeNumber = 5,
                            Date = new DateOnly(2025, 1, 14),
                            EndTime = new TimeOnly(17, 0, 0),
                            StartTime = new TimeOnly(13, 0, 0)
                        },
                        new
                        {
                            EmployeeNumber = 5,
                            Date = new DateOnly(2025, 1, 15),
                            EndTime = new TimeOnly(15, 0, 0),
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            EmployeeNumber = 5,
                            Date = new DateOnly(2025, 1, 16),
                            EndTime = new TimeOnly(20, 0, 0),
                            StartTime = new TimeOnly(12, 0, 0)
                        },
                        new
                        {
                            EmployeeNumber = 5,
                            Date = new DateOnly(2025, 1, 17),
                            EndTime = new TimeOnly(18, 0, 0),
                            StartTime = new TimeOnly(10, 0, 0)
                        },
                        new
                        {
                            EmployeeNumber = 5,
                            Date = new DateOnly(2025, 1, 18),
                            EndTime = new TimeOnly(13, 0, 0),
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            EmployeeNumber = 5,
                            Date = new DateOnly(2025, 1, 19),
                            EndTime = new TimeOnly(17, 0, 0),
                            StartTime = new TimeOnly(11, 0, 0)
                        });
                });

            modelBuilder.Entity("BumboApp.Models.Break", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeOnly?>("EndTime")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("WorkedHourId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WorkedHourId");

                    b.ToTable("Breaks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndTime = new TimeOnly(12, 30, 0),
                            StartTime = new TimeOnly(12, 0, 0),
                            WorkedHourId = 1
                        },
                        new
                        {
                            Id = 2,
                            EndTime = new TimeOnly(13, 30, 0),
                            StartTime = new TimeOnly(13, 0, 0),
                            WorkedHourId = 2
                        },
                        new
                        {
                            Id = 3,
                            EndTime = new TimeOnly(12, 45, 0),
                            StartTime = new TimeOnly(12, 15, 0),
                            WorkedHourId = 3
                        },
                        new
                        {
                            Id = 4,
                            EndTime = new TimeOnly(15, 0, 0),
                            StartTime = new TimeOnly(14, 30, 0),
                            WorkedHourId = 4
                        },
                        new
                        {
                            Id = 5,
                            EndTime = new TimeOnly(12, 30, 0),
                            StartTime = new TimeOnly(12, 0, 0),
                            WorkedHourId = 5
                        },
                        new
                        {
                            Id = 6,
                            EndTime = new TimeOnly(12, 45, 0),
                            StartTime = new TimeOnly(12, 15, 0),
                            WorkedHourId = 6
                        },
                        new
                        {
                            Id = 7,
                            EndTime = new TimeOnly(14, 0, 0),
                            StartTime = new TimeOnly(13, 30, 0),
                            WorkedHourId = 7
                        },
                        new
                        {
                            Id = 8,
                            EndTime = new TimeOnly(12, 15, 0),
                            StartTime = new TimeOnly(11, 45, 0),
                            WorkedHourId = 8
                        },
                        new
                        {
                            Id = 9,
                            EndTime = new TimeOnly(14, 30, 0),
                            StartTime = new TimeOnly(14, 0, 0),
                            WorkedHourId = 9
                        },
                        new
                        {
                            Id = 10,
                            EndTime = new TimeOnly(12, 45, 0),
                            StartTime = new TimeOnly(12, 15, 0),
                            WorkedHourId = 10
                        },
                        new
                        {
                            Id = 21,
                            EndTime = new TimeOnly(12, 45, 0),
                            StartTime = new TimeOnly(12, 15, 0),
                            WorkedHourId = 11
                        },
                        new
                        {
                            Id = 22,
                            EndTime = new TimeOnly(13, 30, 0),
                            StartTime = new TimeOnly(13, 0, 0),
                            WorkedHourId = 12
                        },
                        new
                        {
                            Id = 23,
                            EndTime = new TimeOnly(13, 0, 0),
                            StartTime = new TimeOnly(12, 30, 0),
                            WorkedHourId = 13
                        },
                        new
                        {
                            Id = 24,
                            EndTime = new TimeOnly(14, 30, 0),
                            StartTime = new TimeOnly(14, 0, 0),
                            WorkedHourId = 14
                        },
                        new
                        {
                            Id = 25,
                            EndTime = new TimeOnly(12, 30, 0),
                            StartTime = new TimeOnly(12, 0, 0),
                            WorkedHourId = 15
                        },
                        new
                        {
                            Id = 26,
                            EndTime = new TimeOnly(12, 45, 0),
                            StartTime = new TimeOnly(12, 15, 0),
                            WorkedHourId = 16
                        },
                        new
                        {
                            Id = 27,
                            EndTime = new TimeOnly(13, 45, 0),
                            StartTime = new TimeOnly(13, 15, 0),
                            WorkedHourId = 17
                        },
                        new
                        {
                            Id = 28,
                            EndTime = new TimeOnly(12, 15, 0),
                            StartTime = new TimeOnly(11, 45, 0),
                            WorkedHourId = 18
                        },
                        new
                        {
                            Id = 29,
                            EndTime = new TimeOnly(14, 45, 0),
                            StartTime = new TimeOnly(14, 15, 0),
                            WorkedHourId = 19
                        },
                        new
                        {
                            Id = 30,
                            EndTime = new TimeOnly(13, 0, 0),
                            StartTime = new TimeOnly(12, 30, 0),
                            WorkedHourId = 20
                        });
                });

            modelBuilder.Entity("BumboApp.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeNumber"));

                    b.Property<int>("ContractHours")
                        .HasColumnType("int");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("EndOfEmployment")
                        .HasColumnType("date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("HouseNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("LeaveHours")
                        .HasColumnType("int");

                    b.Property<DateOnly>("StartOfEmployment")
                        .HasColumnType("date");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Zipcode")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.HasKey("EmployeeNumber");

                    b.HasIndex("UserId");

                    b.ToTable("Employees", t =>
                        {
                            t.HasCheckConstraint("CK_Employees_StartOfEmployment_EndOfEmployment", "[StartOfEmployment] <= [EndOfEmployment]");

                            t.HasCheckConstraint("CK_Employees_Zipcode", "[Zipcode] LIKE '[1-9][0-9][0-9][0-9][A-Z][A-Z]'");
                        });

                    b.HasData(
                        new
                        {
                            EmployeeNumber = 1,
                            ContractHours = 40,
                            DateOfBirth = new DateOnly(1990, 5, 20),
                            FirstName = "John",
                            HouseNumber = "1",
                            LastName = "Doe",
                            LeaveHours = 60,
                            StartOfEmployment = new DateOnly(2020, 1, 15),
                            UserId = "2ab03136-c316-4b70-a7fc-4c9cb044a6be",
                            Zipcode = "5583AA"
                        },
                        new
                        {
                            EmployeeNumber = 2,
                            ContractHours = 20,
                            DateOfBirth = new DateOnly(1995, 8, 12),
                            FirstName = "Jane",
                            HouseNumber = "2",
                            LastName = "Smith",
                            LeaveHours = 5,
                            StartOfEmployment = new DateOnly(2021, 3, 1),
                            UserId = "12544476-38da-4113-9c40-4bc508f8c0f2",
                            Zipcode = "5684AS"
                        },
                        new
                        {
                            EmployeeNumber = 3,
                            ContractHours = 20,
                            DateOfBirth = new DateOnly(1998, 12, 5),
                            FirstName = "Emily",
                            HouseNumber = "1",
                            LastName = "Jones",
                            LeaveHours = 40,
                            StartOfEmployment = new DateOnly(2020, 7, 30),
                            UserId = "2667ab01-7225-451b-adbb-c99eea968d02",
                            Zipcode = "5683AA"
                        },
                        new
                        {
                            EmployeeNumber = 4,
                            ContractHours = 20,
                            DateOfBirth = new DateOnly(2002, 6, 21),
                            FirstName = "Bob",
                            HouseNumber = "25",
                            LastName = "van der Steen",
                            LeaveHours = 40,
                            StartOfEmployment = new DateOnly(2020, 6, 30),
                            UserId = "a60c8f93-cb79-441e-8ec9-627d8a679ff3",
                            Zipcode = "5622AX"
                        },
                        new
                        {
                            EmployeeNumber = 5,
                            ContractHours = 40,
                            DateOfBirth = new DateOnly(1966, 10, 10),
                            FirstName = "Paul",
                            HouseNumber = "25",
                            LastName = "Bakker",
                            LeaveHours = 40,
                            StartOfEmployment = new DateOnly(2010, 7, 30),
                            UserId = "4b26e441-e63a-497e-82da-3b629212431b",
                            Zipcode = "5622AX"
                        });
                });

            modelBuilder.Entity("BumboApp.Models.Expectation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("ExpectedCargo")
                        .HasColumnType("int");

                    b.Property<int>("ExpectedCustomers")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Date")
                        .IsUnique();

                    b.ToTable("Expectations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateOnly(2025, 1, 6),
                            ExpectedCargo = 30,
                            ExpectedCustomers = 800
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateOnly(2025, 1, 7),
                            ExpectedCargo = 40,
                            ExpectedCustomers = 900
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateOnly(2025, 1, 8),
                            ExpectedCargo = 50,
                            ExpectedCustomers = 950
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateOnly(2025, 1, 9),
                            ExpectedCargo = 60,
                            ExpectedCustomers = 1000
                        },
                        new
                        {
                            Id = 5,
                            Date = new DateOnly(2025, 1, 10),
                            ExpectedCargo = 45,
                            ExpectedCustomers = 850
                        },
                        new
                        {
                            Id = 6,
                            Date = new DateOnly(2025, 1, 11),
                            ExpectedCargo = 38,
                            ExpectedCustomers = 780
                        },
                        new
                        {
                            Id = 7,
                            Date = new DateOnly(2025, 1, 12),
                            ExpectedCargo = 55,
                            ExpectedCustomers = 960
                        },
                        new
                        {
                            Id = 8,
                            Date = new DateOnly(2025, 1, 13),
                            ExpectedCargo = 35,
                            ExpectedCustomers = 810
                        },
                        new
                        {
                            Id = 9,
                            Date = new DateOnly(2025, 1, 14),
                            ExpectedCargo = 50,
                            ExpectedCustomers = 900
                        },
                        new
                        {
                            Id = 10,
                            Date = new DateOnly(2025, 1, 15),
                            ExpectedCargo = 42,
                            ExpectedCustomers = 850
                        },
                        new
                        {
                            Id = 11,
                            Date = new DateOnly(2025, 1, 16),
                            ExpectedCargo = 60,
                            ExpectedCustomers = 1000
                        },
                        new
                        {
                            Id = 12,
                            Date = new DateOnly(2025, 1, 17),
                            ExpectedCargo = 37,
                            ExpectedCustomers = 820
                        },
                        new
                        {
                            Id = 13,
                            Date = new DateOnly(2025, 1, 18),
                            ExpectedCargo = 53,
                            ExpectedCustomers = 940
                        },
                        new
                        {
                            Id = 14,
                            Date = new DateOnly(2025, 1, 19),
                            ExpectedCargo = 50,
                            ExpectedCustomers = 900
                        },
                        new
                        {
                            Id = 15,
                            Date = new DateOnly(2025, 1, 20),
                            ExpectedCargo = 36,
                            ExpectedCustomers = 810
                        },
                        new
                        {
                            Id = 16,
                            Date = new DateOnly(2025, 1, 21),
                            ExpectedCargo = 47,
                            ExpectedCustomers = 870
                        },
                        new
                        {
                            Id = 17,
                            Date = new DateOnly(2025, 1, 22),
                            ExpectedCargo = 38,
                            ExpectedCustomers = 780
                        },
                        new
                        {
                            Id = 18,
                            Date = new DateOnly(2025, 1, 23),
                            ExpectedCargo = 55,
                            ExpectedCustomers = 950
                        },
                        new
                        {
                            Id = 19,
                            Date = new DateOnly(2025, 1, 24),
                            ExpectedCargo = 45,
                            ExpectedCustomers = 840
                        },
                        new
                        {
                            Id = 20,
                            Date = new DateOnly(2025, 1, 25),
                            ExpectedCargo = 60,
                            ExpectedCustomers = 1000
                        },
                        new
                        {
                            Id = 21,
                            Date = new DateOnly(2025, 1, 26),
                            ExpectedCargo = 40,
                            ExpectedCustomers = 890
                        },
                        new
                        {
                            Id = 22,
                            Date = new DateOnly(2025, 1, 27),
                            ExpectedCargo = 50,
                            ExpectedCustomers = 920
                        },
                        new
                        {
                            Id = 23,
                            Date = new DateOnly(2025, 1, 28),
                            ExpectedCargo = 42,
                            ExpectedCustomers = 860
                        },
                        new
                        {
                            Id = 24,
                            Date = new DateOnly(2025, 1, 29),
                            ExpectedCargo = 60,
                            ExpectedCustomers = 1000
                        },
                        new
                        {
                            Id = 25,
                            Date = new DateOnly(2025, 1, 30),
                            ExpectedCargo = 48,
                            ExpectedCustomers = 930
                        },
                        new
                        {
                            Id = 26,
                            Date = new DateOnly(2025, 1, 31),
                            ExpectedCargo = 35,
                            ExpectedCustomers = 780
                        },
                        new
                        {
                            Id = 27,
                            Date = new DateOnly(2025, 2, 1),
                            ExpectedCargo = 53,
                            ExpectedCustomers = 950
                        },
                        new
                        {
                            Id = 28,
                            Date = new DateOnly(2025, 2, 2),
                            ExpectedCargo = 50,
                            ExpectedCustomers = 900
                        },
                        new
                        {
                            Id = 29,
                            Date = new DateOnly(2025, 2, 3),
                            ExpectedCargo = 37,
                            ExpectedCustomers = 820
                        },
                        new
                        {
                            Id = 30,
                            Date = new DateOnly(2025, 2, 4),
                            ExpectedCargo = 55,
                            ExpectedCustomers = 960
                        },
                        new
                        {
                            Id = 31,
                            Date = new DateOnly(2025, 2, 5),
                            ExpectedCargo = 45,
                            ExpectedCustomers = 840
                        },
                        new
                        {
                            Id = 32,
                            Date = new DateOnly(2025, 2, 6),
                            ExpectedCargo = 38,
                            ExpectedCustomers = 780
                        },
                        new
                        {
                            Id = 33,
                            Date = new DateOnly(2025, 2, 7),
                            ExpectedCargo = 50,
                            ExpectedCustomers = 900
                        },
                        new
                        {
                            Id = 34,
                            Date = new DateOnly(2025, 2, 8),
                            ExpectedCargo = 48,
                            ExpectedCustomers = 930
                        },
                        new
                        {
                            Id = 35,
                            Date = new DateOnly(2025, 2, 9),
                            ExpectedCargo = 60,
                            ExpectedCustomers = 1000
                        });
                });

            modelBuilder.Entity("BumboApp.Models.LeaveRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployeeNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeNumber");

                    b.ToTable("LeaveRequests", t =>
                        {
                            t.HasCheckConstraint("CK_LeaveRequests_StartDate_EndDate", "[StartDate] <= [EndDate]");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmployeeNumber = 2,
                            EndDate = new DateTime(2025, 1, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Reason = "Bruiloft",
                            StartDate = new DateTime(2025, 1, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            EmployeeNumber = 2,
                            EndDate = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Reason = "Weekendje weg",
                            StartDate = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            EmployeeNumber = 3,
                            EndDate = new DateTime(2025, 1, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Reason = "Weekend vakantie",
                            StartDate = new DateTime(2025, 1, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            Id = 4,
                            EmployeeNumber = 3,
                            EndDate = new DateTime(2025, 1, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Reason = "Geen zin om te werken dan",
                            StartDate = new DateTime(2025, 1, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2
                        });
                });

            modelBuilder.Entity("BumboApp.Models.Norm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Activity")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("NormType")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Norms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activity = 0,
                            CreatedAt = new DateTime(2024, 10, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            NormType = 0,
                            Value = 5
                        },
                        new
                        {
                            Id = 2,
                            Activity = 1,
                            CreatedAt = new DateTime(2024, 10, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            NormType = 1,
                            Value = 30
                        },
                        new
                        {
                            Id = 3,
                            Activity = 2,
                            CreatedAt = new DateTime(2024, 10, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            NormType = 2,
                            Value = 30
                        },
                        new
                        {
                            Id = 4,
                            Activity = 3,
                            CreatedAt = new DateTime(2024, 10, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            NormType = 2,
                            Value = 100
                        },
                        new
                        {
                            Id = 5,
                            Activity = 4,
                            CreatedAt = new DateTime(2024, 10, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            NormType = 3,
                            Value = 30
                        });
                });

            modelBuilder.Entity("BumboApp.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActionUrl")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("EmployeeNumber")
                        .HasColumnType("int");

                    b.Property<bool>("HasBeenRead")
                        .HasColumnType("bit");

                    b.Property<DateTime>("SentAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeNumber");

                    b.ToTable("Notifications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Er is een nieuwe verlofaanvraag om te beoordelen",
                            EmployeeNumber = 1,
                            HasBeenRead = true,
                            SentAt = new DateTime(2024, 12, 7, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Nieuwe verlofaanvraag"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Je verlofaanvraag is beoordeeld",
                            EmployeeNumber = 2,
                            HasBeenRead = false,
                            SentAt = new DateTime(2024, 12, 8, 15, 30, 0, 0, DateTimeKind.Unspecified),
                            Title = "Nieuwe verlofaanvraag status"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Je verlofaanvraag is beoordeeld",
                            EmployeeNumber = 3,
                            HasBeenRead = true,
                            SentAt = new DateTime(2024, 12, 8, 15, 30, 0, 0, DateTimeKind.Unspecified),
                            Title = "Nieuwe verlofaanvraag status"
                        });
                });

            modelBuilder.Entity("BumboApp.Models.OpeningHour", b =>
                {
                    b.Property<int>("WeekDay")
                        .HasColumnType("int");

                    b.Property<TimeOnly?>("ClosingTime")
                        .HasColumnType("time");

                    b.Property<TimeOnly?>("OpeningTime")
                        .HasColumnType("time");

                    b.HasKey("WeekDay");

                    b.ToTable("OpeningHours", t =>
                        {
                            t.HasCheckConstraint("CK_OpeningHours_OpeningTime_ClosingTime", "([OpeningTime] IS NULL AND [ClosingTime] IS NULL) OR ([OpeningTime] IS NOT NULL AND [ClosingTime] IS NOT NULL AND [OpeningTime] < [ClosingTime])");
                        });

                    b.HasData(
                        new
                        {
                            WeekDay = 1,
                            ClosingTime = new TimeOnly(21, 0, 0),
                            OpeningTime = new TimeOnly(8, 0, 0)
                        },
                        new
                        {
                            WeekDay = 2,
                            ClosingTime = new TimeOnly(21, 0, 0),
                            OpeningTime = new TimeOnly(8, 0, 0)
                        },
                        new
                        {
                            WeekDay = 3,
                            ClosingTime = new TimeOnly(21, 0, 0),
                            OpeningTime = new TimeOnly(8, 0, 0)
                        },
                        new
                        {
                            WeekDay = 4,
                            ClosingTime = new TimeOnly(21, 0, 0),
                            OpeningTime = new TimeOnly(8, 0, 0)
                        },
                        new
                        {
                            WeekDay = 5,
                            ClosingTime = new TimeOnly(21, 0, 0),
                            OpeningTime = new TimeOnly(8, 0, 0)
                        },
                        new
                        {
                            WeekDay = 6,
                            ClosingTime = new TimeOnly(20, 0, 0),
                            OpeningTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            WeekDay = 0
                        });
                });

            modelBuilder.Entity("BumboApp.Models.Prognosis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("Department")
                        .HasColumnType("int");

                    b.Property<float>("NeededEmployees")
                        .HasColumnType("real");

                    b.Property<float>("NeededHours")
                        .HasColumnType("real");

                    b.Property<int>("WeekPrognosisId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WeekPrognosisId");

                    b.HasIndex("Date", "Department")
                        .IsUnique();

                    b.ToTable("Prognoses", t =>
                        {
                            t.HasCheckConstraint("CK_Prognoses_NeededHours_NeededEmployees", "[NeededHours] = [NeededEmployees] * 8");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateOnly(2025, 1, 6),
                            Department = 0,
                            NeededEmployees = 5f,
                            NeededHours = 40f,
                            WeekPrognosisId = 1
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateOnly(2025, 1, 6),
                            Department = 1,
                            NeededEmployees = 4f,
                            NeededHours = 32f,
                            WeekPrognosisId = 1
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateOnly(2025, 1, 6),
                            Department = 2,
                            NeededEmployees = 3f,
                            NeededHours = 24f,
                            WeekPrognosisId = 1
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateOnly(2025, 1, 7),
                            Department = 0,
                            NeededEmployees = 4f,
                            NeededHours = 32f,
                            WeekPrognosisId = 1
                        },
                        new
                        {
                            Id = 5,
                            Date = new DateOnly(2025, 1, 7),
                            Department = 1,
                            NeededEmployees = 3f,
                            NeededHours = 24f,
                            WeekPrognosisId = 1
                        },
                        new
                        {
                            Id = 6,
                            Date = new DateOnly(2025, 1, 7),
                            Department = 2,
                            NeededEmployees = 2f,
                            NeededHours = 16f,
                            WeekPrognosisId = 1
                        },
                        new
                        {
                            Id = 7,
                            Date = new DateOnly(2025, 1, 8),
                            Department = 0,
                            NeededEmployees = 6f,
                            NeededHours = 48f,
                            WeekPrognosisId = 1
                        },
                        new
                        {
                            Id = 8,
                            Date = new DateOnly(2025, 1, 8),
                            Department = 1,
                            NeededEmployees = 3f,
                            NeededHours = 24f,
                            WeekPrognosisId = 1
                        },
                        new
                        {
                            Id = 9,
                            Date = new DateOnly(2025, 1, 8),
                            Department = 2,
                            NeededEmployees = 2f,
                            NeededHours = 16f,
                            WeekPrognosisId = 1
                        },
                        new
                        {
                            Id = 10,
                            Date = new DateOnly(2025, 1, 9),
                            Department = 0,
                            NeededEmployees = 6f,
                            NeededHours = 48f,
                            WeekPrognosisId = 1
                        },
                        new
                        {
                            Id = 11,
                            Date = new DateOnly(2025, 1, 9),
                            Department = 1,
                            NeededEmployees = 3f,
                            NeededHours = 24f,
                            WeekPrognosisId = 1
                        },
                        new
                        {
                            Id = 12,
                            Date = new DateOnly(2025, 1, 9),
                            Department = 2,
                            NeededEmployees = 2f,
                            NeededHours = 16f,
                            WeekPrognosisId = 1
                        },
                        new
                        {
                            Id = 13,
                            Date = new DateOnly(2025, 1, 10),
                            Department = 0,
                            NeededEmployees = 6f,
                            NeededHours = 48f,
                            WeekPrognosisId = 1
                        },
                        new
                        {
                            Id = 14,
                            Date = new DateOnly(2025, 1, 10),
                            Department = 1,
                            NeededEmployees = 3f,
                            NeededHours = 24f,
                            WeekPrognosisId = 1
                        },
                        new
                        {
                            Id = 15,
                            Date = new DateOnly(2025, 1, 10),
                            Department = 2,
                            NeededEmployees = 2f,
                            NeededHours = 16f,
                            WeekPrognosisId = 1
                        },
                        new
                        {
                            Id = 16,
                            Date = new DateOnly(2025, 1, 11),
                            Department = 0,
                            NeededEmployees = 6f,
                            NeededHours = 48f,
                            WeekPrognosisId = 1
                        },
                        new
                        {
                            Id = 17,
                            Date = new DateOnly(2025, 1, 11),
                            Department = 1,
                            NeededEmployees = 3f,
                            NeededHours = 24f,
                            WeekPrognosisId = 1
                        },
                        new
                        {
                            Id = 18,
                            Date = new DateOnly(2025, 1, 11),
                            Department = 2,
                            NeededEmployees = 2f,
                            NeededHours = 16f,
                            WeekPrognosisId = 1
                        },
                        new
                        {
                            Id = 19,
                            Date = new DateOnly(2025, 1, 12),
                            Department = 0,
                            NeededEmployees = 6f,
                            NeededHours = 48f,
                            WeekPrognosisId = 1
                        },
                        new
                        {
                            Id = 20,
                            Date = new DateOnly(2025, 1, 12),
                            Department = 1,
                            NeededEmployees = 3f,
                            NeededHours = 24f,
                            WeekPrognosisId = 1
                        },
                        new
                        {
                            Id = 21,
                            Date = new DateOnly(2025, 1, 12),
                            Department = 2,
                            NeededEmployees = 2f,
                            NeededHours = 16f,
                            WeekPrognosisId = 1
                        },
                        new
                        {
                            Id = 22,
                            Date = new DateOnly(2025, 1, 13),
                            Department = 0,
                            NeededEmployees = 5f,
                            NeededHours = 40f,
                            WeekPrognosisId = 2
                        },
                        new
                        {
                            Id = 23,
                            Date = new DateOnly(2025, 1, 13),
                            Department = 1,
                            NeededEmployees = 4f,
                            NeededHours = 32f,
                            WeekPrognosisId = 2
                        },
                        new
                        {
                            Id = 24,
                            Date = new DateOnly(2025, 1, 13),
                            Department = 2,
                            NeededEmployees = 3f,
                            NeededHours = 24f,
                            WeekPrognosisId = 2
                        },
                        new
                        {
                            Id = 25,
                            Date = new DateOnly(2025, 1, 14),
                            Department = 0,
                            NeededEmployees = 4f,
                            NeededHours = 32f,
                            WeekPrognosisId = 2
                        },
                        new
                        {
                            Id = 26,
                            Date = new DateOnly(2025, 1, 14),
                            Department = 1,
                            NeededEmployees = 3f,
                            NeededHours = 24f,
                            WeekPrognosisId = 2
                        },
                        new
                        {
                            Id = 27,
                            Date = new DateOnly(2025, 1, 14),
                            Department = 2,
                            NeededEmployees = 2f,
                            NeededHours = 16f,
                            WeekPrognosisId = 2
                        },
                        new
                        {
                            Id = 28,
                            Date = new DateOnly(2025, 1, 15),
                            Department = 0,
                            NeededEmployees = 5f,
                            NeededHours = 40f,
                            WeekPrognosisId = 2
                        },
                        new
                        {
                            Id = 29,
                            Date = new DateOnly(2025, 1, 15),
                            Department = 1,
                            NeededEmployees = 4f,
                            NeededHours = 32f,
                            WeekPrognosisId = 2
                        },
                        new
                        {
                            Id = 30,
                            Date = new DateOnly(2025, 1, 15),
                            Department = 2,
                            NeededEmployees = 3f,
                            NeededHours = 24f,
                            WeekPrognosisId = 2
                        },
                        new
                        {
                            Id = 31,
                            Date = new DateOnly(2025, 1, 16),
                            Department = 0,
                            NeededEmployees = 6f,
                            NeededHours = 48f,
                            WeekPrognosisId = 2
                        },
                        new
                        {
                            Id = 32,
                            Date = new DateOnly(2025, 1, 16),
                            Department = 1,
                            NeededEmployees = 4f,
                            NeededHours = 32f,
                            WeekPrognosisId = 2
                        },
                        new
                        {
                            Id = 33,
                            Date = new DateOnly(2025, 1, 16),
                            Department = 2,
                            NeededEmployees = 2f,
                            NeededHours = 16f,
                            WeekPrognosisId = 2
                        },
                        new
                        {
                            Id = 34,
                            Date = new DateOnly(2025, 1, 17),
                            Department = 0,
                            NeededEmployees = 5f,
                            NeededHours = 40f,
                            WeekPrognosisId = 2
                        },
                        new
                        {
                            Id = 35,
                            Date = new DateOnly(2025, 1, 17),
                            Department = 1,
                            NeededEmployees = 4f,
                            NeededHours = 32f,
                            WeekPrognosisId = 2
                        },
                        new
                        {
                            Id = 36,
                            Date = new DateOnly(2025, 1, 17),
                            Department = 2,
                            NeededEmployees = 3f,
                            NeededHours = 24f,
                            WeekPrognosisId = 2
                        },
                        new
                        {
                            Id = 37,
                            Date = new DateOnly(2025, 1, 18),
                            Department = 0,
                            NeededEmployees = 4f,
                            NeededHours = 32f,
                            WeekPrognosisId = 2
                        },
                        new
                        {
                            Id = 38,
                            Date = new DateOnly(2025, 1, 18),
                            Department = 1,
                            NeededEmployees = 5f,
                            NeededHours = 40f,
                            WeekPrognosisId = 2
                        },
                        new
                        {
                            Id = 39,
                            Date = new DateOnly(2025, 1, 18),
                            Department = 2,
                            NeededEmployees = 3f,
                            NeededHours = 24f,
                            WeekPrognosisId = 2
                        },
                        new
                        {
                            Id = 40,
                            Date = new DateOnly(2025, 1, 19),
                            Department = 0,
                            NeededEmployees = 6f,
                            NeededHours = 48f,
                            WeekPrognosisId = 2
                        },
                        new
                        {
                            Id = 41,
                            Date = new DateOnly(2025, 1, 19),
                            Department = 1,
                            NeededEmployees = 4f,
                            NeededHours = 32f,
                            WeekPrognosisId = 2
                        },
                        new
                        {
                            Id = 42,
                            Date = new DateOnly(2025, 1, 19),
                            Department = 2,
                            NeededEmployees = 2f,
                            NeededHours = 16f,
                            WeekPrognosisId = 2
                        },
                        new
                        {
                            Id = 43,
                            Date = new DateOnly(2025, 1, 20),
                            Department = 0,
                            NeededEmployees = 5.25f,
                            NeededHours = 42f,
                            WeekPrognosisId = 3
                        },
                        new
                        {
                            Id = 44,
                            Date = new DateOnly(2025, 1, 20),
                            Department = 1,
                            NeededEmployees = 4.25f,
                            NeededHours = 34f,
                            WeekPrognosisId = 3
                        },
                        new
                        {
                            Id = 45,
                            Date = new DateOnly(2025, 1, 20),
                            Department = 2,
                            NeededEmployees = 2.75f,
                            NeededHours = 22f,
                            WeekPrognosisId = 3
                        },
                        new
                        {
                            Id = 46,
                            Date = new DateOnly(2025, 1, 21),
                            Department = 0,
                            NeededEmployees = 4.25f,
                            NeededHours = 34f,
                            WeekPrognosisId = 3
                        },
                        new
                        {
                            Id = 47,
                            Date = new DateOnly(2025, 1, 21),
                            Department = 1,
                            NeededEmployees = 3.25f,
                            NeededHours = 26f,
                            WeekPrognosisId = 3
                        },
                        new
                        {
                            Id = 48,
                            Date = new DateOnly(2025, 1, 21),
                            Department = 2,
                            NeededEmployees = 2.25f,
                            NeededHours = 18f,
                            WeekPrognosisId = 3
                        },
                        new
                        {
                            Id = 49,
                            Date = new DateOnly(2025, 1, 22),
                            Department = 0,
                            NeededEmployees = 5.75f,
                            NeededHours = 46f,
                            WeekPrognosisId = 3
                        },
                        new
                        {
                            Id = 50,
                            Date = new DateOnly(2025, 1, 22),
                            Department = 1,
                            NeededEmployees = 3.5f,
                            NeededHours = 28f,
                            WeekPrognosisId = 3
                        },
                        new
                        {
                            Id = 51,
                            Date = new DateOnly(2025, 1, 22),
                            Department = 2,
                            NeededEmployees = 3f,
                            NeededHours = 24f,
                            WeekPrognosisId = 3
                        },
                        new
                        {
                            Id = 52,
                            Date = new DateOnly(2025, 1, 23),
                            Department = 0,
                            NeededEmployees = 6.25f,
                            NeededHours = 50f,
                            WeekPrognosisId = 3
                        },
                        new
                        {
                            Id = 53,
                            Date = new DateOnly(2025, 1, 23),
                            Department = 1,
                            NeededEmployees = 4.75f,
                            NeededHours = 38f,
                            WeekPrognosisId = 3
                        },
                        new
                        {
                            Id = 54,
                            Date = new DateOnly(2025, 1, 23),
                            Department = 2,
                            NeededEmployees = 2.25f,
                            NeededHours = 18f,
                            WeekPrognosisId = 3
                        },
                        new
                        {
                            Id = 55,
                            Date = new DateOnly(2025, 1, 24),
                            Department = 0,
                            NeededEmployees = 5.25f,
                            NeededHours = 42f,
                            WeekPrognosisId = 3
                        },
                        new
                        {
                            Id = 56,
                            Date = new DateOnly(2025, 1, 24),
                            Department = 1,
                            NeededEmployees = 3.75f,
                            NeededHours = 30f,
                            WeekPrognosisId = 3
                        },
                        new
                        {
                            Id = 57,
                            Date = new DateOnly(2025, 1, 24),
                            Department = 2,
                            NeededEmployees = 1.75f,
                            NeededHours = 14f,
                            WeekPrognosisId = 3
                        },
                        new
                        {
                            Id = 58,
                            Date = new DateOnly(2025, 1, 25),
                            Department = 0,
                            NeededEmployees = 4f,
                            NeededHours = 32f,
                            WeekPrognosisId = 3
                        },
                        new
                        {
                            Id = 59,
                            Date = new DateOnly(2025, 1, 25),
                            Department = 1,
                            NeededEmployees = 5f,
                            NeededHours = 40f,
                            WeekPrognosisId = 3
                        },
                        new
                        {
                            Id = 60,
                            Date = new DateOnly(2025, 1, 25),
                            Department = 2,
                            NeededEmployees = 3f,
                            NeededHours = 24f,
                            WeekPrognosisId = 3
                        },
                        new
                        {
                            Id = 61,
                            Date = new DateOnly(2025, 1, 26),
                            Department = 0,
                            NeededEmployees = 6f,
                            NeededHours = 48f,
                            WeekPrognosisId = 3
                        },
                        new
                        {
                            Id = 62,
                            Date = new DateOnly(2025, 1, 26),
                            Department = 1,
                            NeededEmployees = 4f,
                            NeededHours = 32f,
                            WeekPrognosisId = 3
                        },
                        new
                        {
                            Id = 63,
                            Date = new DateOnly(2025, 1, 26),
                            Department = 2,
                            NeededEmployees = 2f,
                            NeededHours = 16f,
                            WeekPrognosisId = 3
                        });
                });

            modelBuilder.Entity("BumboApp.Models.SchoolSchedule", b =>
                {
                    b.Property<int>("EmployeeNumber")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<float>("DurationInHours")
                        .HasColumnType("real");

                    b.HasKey("EmployeeNumber", "Date");

                    b.ToTable("SchoolSchedules");

                    b.HasData(
                        new
                        {
                            EmployeeNumber = 2,
                            Date = new DateOnly(2025, 1, 6),
                            DurationInHours = 6f
                        },
                        new
                        {
                            EmployeeNumber = 2,
                            Date = new DateOnly(2025, 1, 7),
                            DurationInHours = 7f
                        },
                        new
                        {
                            EmployeeNumber = 2,
                            Date = new DateOnly(2025, 1, 8),
                            DurationInHours = 4f
                        },
                        new
                        {
                            EmployeeNumber = 2,
                            Date = new DateOnly(2025, 1, 9),
                            DurationInHours = 3f
                        },
                        new
                        {
                            EmployeeNumber = 2,
                            Date = new DateOnly(2025, 1, 10),
                            DurationInHours = 5f
                        },
                        new
                        {
                            EmployeeNumber = 2,
                            Date = new DateOnly(2025, 1, 13),
                            DurationInHours = 6.5f
                        },
                        new
                        {
                            EmployeeNumber = 2,
                            Date = new DateOnly(2025, 1, 14),
                            DurationInHours = 7.5f
                        },
                        new
                        {
                            EmployeeNumber = 2,
                            Date = new DateOnly(2025, 1, 15),
                            DurationInHours = 4.5f
                        },
                        new
                        {
                            EmployeeNumber = 2,
                            Date = new DateOnly(2025, 1, 16),
                            DurationInHours = 3.5f
                        },
                        new
                        {
                            EmployeeNumber = 2,
                            Date = new DateOnly(2025, 1, 17),
                            DurationInHours = 5.5f
                        },
                        new
                        {
                            EmployeeNumber = 3,
                            Date = new DateOnly(2025, 1, 6),
                            DurationInHours = 6f
                        },
                        new
                        {
                            EmployeeNumber = 3,
                            Date = new DateOnly(2025, 1, 7),
                            DurationInHours = 4f
                        },
                        new
                        {
                            EmployeeNumber = 3,
                            Date = new DateOnly(2025, 1, 8),
                            DurationInHours = 3f
                        },
                        new
                        {
                            EmployeeNumber = 3,
                            Date = new DateOnly(2025, 1, 9),
                            DurationInHours = 5f
                        },
                        new
                        {
                            EmployeeNumber = 3,
                            Date = new DateOnly(2025, 1, 10),
                            DurationInHours = 7f
                        },
                        new
                        {
                            EmployeeNumber = 3,
                            Date = new DateOnly(2025, 1, 13),
                            DurationInHours = 6.5f
                        },
                        new
                        {
                            EmployeeNumber = 3,
                            Date = new DateOnly(2025, 1, 14),
                            DurationInHours = 4.5f
                        },
                        new
                        {
                            EmployeeNumber = 3,
                            Date = new DateOnly(2025, 1, 15),
                            DurationInHours = 3.5f
                        },
                        new
                        {
                            EmployeeNumber = 3,
                            Date = new DateOnly(2025, 1, 16),
                            DurationInHours = 5.5f
                        },
                        new
                        {
                            EmployeeNumber = 3,
                            Date = new DateOnly(2025, 1, 17),
                            DurationInHours = 7.5f
                        },
                        new
                        {
                            EmployeeNumber = 4,
                            Date = new DateOnly(2025, 1, 6),
                            DurationInHours = 6f
                        },
                        new
                        {
                            EmployeeNumber = 4,
                            Date = new DateOnly(2025, 1, 7),
                            DurationInHours = 7f
                        },
                        new
                        {
                            EmployeeNumber = 4,
                            Date = new DateOnly(2025, 1, 8),
                            DurationInHours = 4f
                        },
                        new
                        {
                            EmployeeNumber = 4,
                            Date = new DateOnly(2025, 1, 9),
                            DurationInHours = 3f
                        },
                        new
                        {
                            EmployeeNumber = 4,
                            Date = new DateOnly(2025, 1, 10),
                            DurationInHours = 5f
                        },
                        new
                        {
                            EmployeeNumber = 4,
                            Date = new DateOnly(2025, 1, 13),
                            DurationInHours = 6.5f
                        },
                        new
                        {
                            EmployeeNumber = 4,
                            Date = new DateOnly(2025, 1, 14),
                            DurationInHours = 7.5f
                        },
                        new
                        {
                            EmployeeNumber = 4,
                            Date = new DateOnly(2025, 1, 15),
                            DurationInHours = 4.5f
                        },
                        new
                        {
                            EmployeeNumber = 4,
                            Date = new DateOnly(2025, 1, 16),
                            DurationInHours = 3.5f
                        },
                        new
                        {
                            EmployeeNumber = 4,
                            Date = new DateOnly(2025, 1, 17),
                            DurationInHours = 5.5f
                        });
                });

            modelBuilder.Entity("BumboApp.Models.Shift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Department")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsFinal")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeNumber");

                    b.ToTable("Shifts", t =>
                        {
                            t.HasCheckConstraint("CK_Shifts_Start_End", "[Start] < [End]");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Department = 2,
                            EmployeeNumber = 2,
                            End = new DateTime(2025, 1, 6, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = true,
                            Start = new DateTime(2025, 1, 6, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Department = 0,
                            EmployeeNumber = 2,
                            End = new DateTime(2025, 1, 7, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = true,
                            Start = new DateTime(2025, 1, 7, 10, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Department = 2,
                            EmployeeNumber = 2,
                            End = new DateTime(2025, 1, 8, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = true,
                            Start = new DateTime(2025, 1, 8, 11, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Department = 1,
                            EmployeeNumber = 2,
                            End = new DateTime(2025, 1, 9, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = true,
                            Start = new DateTime(2025, 1, 9, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Department = 0,
                            EmployeeNumber = 2,
                            End = new DateTime(2025, 1, 10, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = true,
                            Start = new DateTime(2025, 1, 10, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            Department = 1,
                            EmployeeNumber = 2,
                            End = new DateTime(2025, 1, 11, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = true,
                            Start = new DateTime(2025, 1, 11, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            Department = 2,
                            EmployeeNumber = 2,
                            End = new DateTime(2025, 1, 12, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = true,
                            Start = new DateTime(2025, 1, 12, 10, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            Department = 1,
                            EmployeeNumber = 2,
                            End = new DateTime(2025, 1, 13, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = false,
                            Start = new DateTime(2025, 1, 13, 11, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            Department = 0,
                            EmployeeNumber = 2,
                            End = new DateTime(2025, 1, 14, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = false,
                            Start = new DateTime(2025, 1, 14, 13, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            Department = 1,
                            EmployeeNumber = 2,
                            End = new DateTime(2025, 1, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = false,
                            Start = new DateTime(2025, 1, 15, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            Department = 2,
                            EmployeeNumber = 2,
                            End = new DateTime(2025, 1, 16, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = false,
                            Start = new DateTime(2025, 1, 16, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            Department = 0,
                            EmployeeNumber = 2,
                            End = new DateTime(2025, 1, 17, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = false,
                            Start = new DateTime(2025, 1, 17, 10, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            Department = 0,
                            EmployeeNumber = 3,
                            End = new DateTime(2025, 1, 6, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = true,
                            Start = new DateTime(2025, 1, 6, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14,
                            Department = 2,
                            EmployeeNumber = 3,
                            End = new DateTime(2025, 1, 7, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = true,
                            Start = new DateTime(2025, 1, 7, 10, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15,
                            Department = 2,
                            EmployeeNumber = 3,
                            End = new DateTime(2025, 1, 8, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = true,
                            Start = new DateTime(2025, 1, 8, 11, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 16,
                            Department = 1,
                            EmployeeNumber = 3,
                            End = new DateTime(2025, 1, 9, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = true,
                            Start = new DateTime(2025, 1, 9, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 17,
                            Department = 2,
                            EmployeeNumber = 3,
                            End = new DateTime(2025, 1, 10, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = true,
                            Start = new DateTime(2025, 1, 10, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 18,
                            Department = 1,
                            EmployeeNumber = 3,
                            End = new DateTime(2025, 1, 11, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = true,
                            Start = new DateTime(2025, 1, 11, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 19,
                            Department = 0,
                            EmployeeNumber = 3,
                            End = new DateTime(2025, 1, 12, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = true,
                            Start = new DateTime(2025, 1, 12, 10, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 20,
                            Department = 1,
                            EmployeeNumber = 3,
                            End = new DateTime(2025, 1, 13, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = false,
                            Start = new DateTime(2025, 1, 13, 11, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 21,
                            Department = 2,
                            EmployeeNumber = 3,
                            End = new DateTime(2025, 1, 14, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = false,
                            Start = new DateTime(2025, 1, 14, 13, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 22,
                            Department = 0,
                            EmployeeNumber = 3,
                            End = new DateTime(2025, 1, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = false,
                            Start = new DateTime(2025, 1, 15, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 23,
                            Department = 2,
                            EmployeeNumber = 3,
                            End = new DateTime(2025, 1, 16, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = false,
                            Start = new DateTime(2025, 1, 16, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 24,
                            Department = 2,
                            EmployeeNumber = 3,
                            End = new DateTime(2025, 1, 17, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = false,
                            Start = new DateTime(2025, 1, 17, 10, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 25,
                            Department = 0,
                            EmployeeNumber = 4,
                            End = new DateTime(2025, 1, 6, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = true,
                            Start = new DateTime(2025, 1, 6, 10, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 26,
                            Department = 2,
                            EmployeeNumber = 4,
                            End = new DateTime(2025, 1, 7, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = true,
                            Start = new DateTime(2025, 1, 7, 11, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 27,
                            Department = 1,
                            EmployeeNumber = 4,
                            End = new DateTime(2025, 1, 8, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = true,
                            Start = new DateTime(2025, 1, 8, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 28,
                            Department = 0,
                            EmployeeNumber = 4,
                            End = new DateTime(2025, 1, 9, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = true,
                            Start = new DateTime(2025, 1, 9, 10, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 29,
                            Department = 2,
                            EmployeeNumber = 4,
                            End = new DateTime(2025, 1, 10, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = true,
                            Start = new DateTime(2025, 1, 10, 14, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 30,
                            Department = 0,
                            EmployeeNumber = 4,
                            End = new DateTime(2025, 1, 11, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = true,
                            Start = new DateTime(2025, 1, 11, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 31,
                            Department = 2,
                            EmployeeNumber = 4,
                            End = new DateTime(2025, 1, 12, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = true,
                            Start = new DateTime(2025, 1, 12, 11, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 32,
                            Department = 1,
                            EmployeeNumber = 4,
                            End = new DateTime(2025, 1, 13, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = false,
                            Start = new DateTime(2025, 1, 13, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 33,
                            Department = 2,
                            EmployeeNumber = 4,
                            End = new DateTime(2025, 1, 14, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = false,
                            Start = new DateTime(2025, 1, 14, 13, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 34,
                            Department = 0,
                            EmployeeNumber = 4,
                            End = new DateTime(2025, 1, 15, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = false,
                            Start = new DateTime(2025, 1, 15, 10, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 35,
                            Department = 1,
                            EmployeeNumber = 5,
                            End = new DateTime(2025, 1, 6, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = true,
                            Start = new DateTime(2025, 1, 6, 13, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 36,
                            Department = 2,
                            EmployeeNumber = 5,
                            End = new DateTime(2025, 1, 7, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = true,
                            Start = new DateTime(2025, 1, 7, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 37,
                            Department = 0,
                            EmployeeNumber = 5,
                            End = new DateTime(2025, 1, 8, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = true,
                            Start = new DateTime(2025, 1, 8, 10, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 38,
                            Department = 2,
                            EmployeeNumber = 5,
                            End = new DateTime(2025, 1, 9, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = true,
                            Start = new DateTime(2025, 1, 9, 14, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 39,
                            Department = 1,
                            EmployeeNumber = 5,
                            End = new DateTime(2025, 1, 10, 21, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = true,
                            Start = new DateTime(2025, 1, 10, 15, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 40,
                            Department = 2,
                            EmployeeNumber = 5,
                            End = new DateTime(2025, 1, 11, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = true,
                            Start = new DateTime(2025, 1, 11, 13, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 41,
                            Department = 0,
                            EmployeeNumber = 5,
                            End = new DateTime(2025, 1, 12, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = true,
                            Start = new DateTime(2025, 1, 12, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 42,
                            Department = 2,
                            EmployeeNumber = 5,
                            End = new DateTime(2025, 1, 13, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = false,
                            Start = new DateTime(2025, 1, 13, 14, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 43,
                            Department = 0,
                            EmployeeNumber = 5,
                            End = new DateTime(2025, 1, 14, 21, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = false,
                            Start = new DateTime(2025, 1, 14, 15, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 44,
                            Department = 2,
                            EmployeeNumber = 5,
                            End = new DateTime(2025, 1, 15, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = false,
                            Start = new DateTime(2025, 1, 15, 13, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 45,
                            Department = 2,
                            EmployeeNumber = 5,
                            End = new DateTime(2025, 1, 17, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = false,
                            Start = new DateTime(2025, 1, 17, 13, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 46,
                            Department = 2,
                            EmployeeNumber = 5,
                            End = new DateTime(2025, 1, 19, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = false,
                            Start = new DateTime(2025, 1, 19, 13, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 47,
                            Department = 2,
                            End = new DateTime(2025, 1, 18, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = false,
                            Start = new DateTime(2025, 1, 18, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 48,
                            Department = 2,
                            End = new DateTime(2025, 1, 18, 21, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = false,
                            Start = new DateTime(2025, 1, 18, 15, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 49,
                            Department = 2,
                            End = new DateTime(2025, 1, 19, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = false,
                            Start = new DateTime(2025, 1, 19, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 101,
                            Department = 0,
                            EmployeeNumber = 2,
                            End = new DateTime(2024, 12, 2, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = true,
                            Start = new DateTime(2024, 12, 2, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 102,
                            Department = 2,
                            EmployeeNumber = 2,
                            End = new DateTime(2024, 12, 3, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = true,
                            Start = new DateTime(2024, 12, 3, 10, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 103,
                            Department = 1,
                            EmployeeNumber = 2,
                            End = new DateTime(2024, 12, 4, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = true,
                            Start = new DateTime(2024, 12, 4, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 104,
                            Department = 0,
                            EmployeeNumber = 2,
                            End = new DateTime(2024, 12, 5, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = true,
                            Start = new DateTime(2024, 12, 5, 11, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 105,
                            Department = 2,
                            EmployeeNumber = 2,
                            End = new DateTime(2024, 12, 6, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = true,
                            Start = new DateTime(2024, 12, 6, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 106,
                            Department = 1,
                            EmployeeNumber = 3,
                            End = new DateTime(2024, 12, 2, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = true,
                            Start = new DateTime(2024, 12, 2, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 107,
                            Department = 2,
                            EmployeeNumber = 3,
                            End = new DateTime(2024, 12, 3, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = true,
                            Start = new DateTime(2024, 12, 3, 10, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 108,
                            Department = 0,
                            EmployeeNumber = 3,
                            End = new DateTime(2024, 12, 4, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = true,
                            Start = new DateTime(2024, 12, 4, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 109,
                            Department = 2,
                            EmployeeNumber = 3,
                            End = new DateTime(2024, 12, 5, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = true,
                            Start = new DateTime(2024, 12, 5, 11, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 110,
                            Department = 1,
                            EmployeeNumber = 3,
                            End = new DateTime(2024, 12, 6, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = true,
                            Start = new DateTime(2024, 12, 6, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 111,
                            Department = 0,
                            EmployeeNumber = 2,
                            End = new DateTime(2024, 12, 9, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = true,
                            Start = new DateTime(2024, 12, 9, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 112,
                            Department = 2,
                            EmployeeNumber = 2,
                            End = new DateTime(2024, 12, 10, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = true,
                            Start = new DateTime(2024, 12, 10, 10, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 113,
                            Department = 1,
                            EmployeeNumber = 2,
                            End = new DateTime(2024, 12, 11, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = true,
                            Start = new DateTime(2024, 12, 11, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 114,
                            Department = 0,
                            EmployeeNumber = 2,
                            End = new DateTime(2024, 12, 12, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = true,
                            Start = new DateTime(2024, 12, 12, 11, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 115,
                            Department = 2,
                            EmployeeNumber = 2,
                            End = new DateTime(2024, 12, 13, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = true,
                            Start = new DateTime(2024, 12, 13, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 116,
                            Department = 1,
                            EmployeeNumber = 3,
                            End = new DateTime(2024, 12, 9, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = true,
                            Start = new DateTime(2024, 12, 9, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 117,
                            Department = 2,
                            EmployeeNumber = 3,
                            End = new DateTime(2024, 12, 10, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = true,
                            Start = new DateTime(2024, 12, 10, 10, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 118,
                            Department = 0,
                            EmployeeNumber = 3,
                            End = new DateTime(2024, 12, 11, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = true,
                            Start = new DateTime(2024, 12, 11, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 119,
                            Department = 2,
                            EmployeeNumber = 3,
                            End = new DateTime(2024, 12, 12, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = true,
                            Start = new DateTime(2024, 12, 12, 11, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 120,
                            Department = 1,
                            EmployeeNumber = 3,
                            End = new DateTime(2024, 12, 13, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            IsFinal = true,
                            Start = new DateTime(2024, 12, 13, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("BumboApp.Models.ShiftTakeOver", b =>
                {
                    b.Property<int>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeTakingOverEmployeeNumber")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ShiftId");

                    b.HasIndex("EmployeeTakingOverEmployeeNumber");

                    b.ToTable("ShiftTakeOvers");

                    b.HasData(
                        new
                        {
                            ShiftId = 2,
                            EmployeeTakingOverEmployeeNumber = 3,
                            Status = 0
                        },
                        new
                        {
                            ShiftId = 20,
                            EmployeeTakingOverEmployeeNumber = 2,
                            Status = 2
                        },
                        new
                        {
                            ShiftId = 21,
                            Status = 0
                        });
                });

            modelBuilder.Entity("BumboApp.Models.SickLeave", b =>
                {
                    b.Property<int>("EmployeeNumber")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.HasKey("EmployeeNumber", "Date");

                    b.ToTable("SickLeaves");
                });

            modelBuilder.Entity("BumboApp.Models.StandardAvailability", b =>
                {
                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeNumber")
                        .HasColumnType("int");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("Day", "EmployeeNumber");

                    b.HasIndex("EmployeeNumber");

                    b.ToTable("StandardAvailabilities", t =>
                        {
                            t.HasCheckConstraint("CK_StandardAvailability_StartTime_EndTime", "[StartTime] <= [EndTime]");
                        });

                    b.HasData(
                        new
                        {
                            Day = 1,
                            EmployeeNumber = 2,
                            EndTime = new TimeOnly(21, 0, 0),
                            StartTime = new TimeOnly(18, 0, 0)
                        },
                        new
                        {
                            Day = 2,
                            EmployeeNumber = 2,
                            EndTime = new TimeOnly(21, 0, 0),
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            Day = 3,
                            EmployeeNumber = 2,
                            EndTime = new TimeOnly(21, 0, 0),
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            Day = 4,
                            EmployeeNumber = 2,
                            EndTime = new TimeOnly(18, 0, 0),
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            Day = 5,
                            EmployeeNumber = 2,
                            EndTime = new TimeOnly(21, 0, 0),
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            Day = 6,
                            EmployeeNumber = 2,
                            EndTime = new TimeOnly(16, 0, 0),
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            Day = 0,
                            EmployeeNumber = 2,
                            EndTime = new TimeOnly(21, 0, 0),
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            Day = 1,
                            EmployeeNumber = 3,
                            EndTime = new TimeOnly(14, 30, 0),
                            StartTime = new TimeOnly(8, 30, 0)
                        },
                        new
                        {
                            Day = 2,
                            EmployeeNumber = 3,
                            EndTime = new TimeOnly(19, 0, 0),
                            StartTime = new TimeOnly(13, 0, 0)
                        },
                        new
                        {
                            Day = 3,
                            EmployeeNumber = 3,
                            EndTime = new TimeOnly(17, 0, 0),
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            Day = 4,
                            EmployeeNumber = 3,
                            EndTime = new TimeOnly(16, 0, 0),
                            StartTime = new TimeOnly(10, 0, 0)
                        },
                        new
                        {
                            Day = 5,
                            EmployeeNumber = 3,
                            EndTime = new TimeOnly(20, 0, 0),
                            StartTime = new TimeOnly(14, 0, 0)
                        },
                        new
                        {
                            Day = 6,
                            EmployeeNumber = 3,
                            EndTime = new TimeOnly(18, 0, 0),
                            StartTime = new TimeOnly(11, 0, 0)
                        },
                        new
                        {
                            Day = 0,
                            EmployeeNumber = 3,
                            EndTime = new TimeOnly(16, 0, 0),
                            StartTime = new TimeOnly(12, 0, 0)
                        },
                        new
                        {
                            Day = 1,
                            EmployeeNumber = 4,
                            EndTime = new TimeOnly(17, 0, 0),
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            Day = 2,
                            EmployeeNumber = 4,
                            EndTime = new TimeOnly(19, 0, 0),
                            StartTime = new TimeOnly(11, 0, 0)
                        },
                        new
                        {
                            Day = 3,
                            EmployeeNumber = 4,
                            EndTime = new TimeOnly(18, 0, 0),
                            StartTime = new TimeOnly(10, 0, 0)
                        },
                        new
                        {
                            Day = 4,
                            EmployeeNumber = 4,
                            EndTime = new TimeOnly(17, 0, 0),
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            Day = 5,
                            EmployeeNumber = 4,
                            EndTime = new TimeOnly(21, 0, 0),
                            StartTime = new TimeOnly(13, 0, 0)
                        },
                        new
                        {
                            Day = 6,
                            EmployeeNumber = 4,
                            EndTime = new TimeOnly(16, 0, 0),
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            Day = 0,
                            EmployeeNumber = 4,
                            EndTime = new TimeOnly(20, 0, 0),
                            StartTime = new TimeOnly(12, 0, 0)
                        },
                        new
                        {
                            Day = 1,
                            EmployeeNumber = 5,
                            EndTime = new TimeOnly(15, 0, 0),
                            StartTime = new TimeOnly(7, 0, 0)
                        },
                        new
                        {
                            Day = 2,
                            EmployeeNumber = 5,
                            EndTime = new TimeOnly(16, 0, 0),
                            StartTime = new TimeOnly(8, 0, 0)
                        },
                        new
                        {
                            Day = 3,
                            EmployeeNumber = 5,
                            EndTime = new TimeOnly(17, 0, 0),
                            StartTime = new TimeOnly(9, 0, 0)
                        },
                        new
                        {
                            Day = 4,
                            EmployeeNumber = 5,
                            EndTime = new TimeOnly(19, 0, 0),
                            StartTime = new TimeOnly(11, 0, 0)
                        },
                        new
                        {
                            Day = 5,
                            EmployeeNumber = 5,
                            EndTime = new TimeOnly(20, 0, 0),
                            StartTime = new TimeOnly(12, 0, 0)
                        },
                        new
                        {
                            Day = 6,
                            EmployeeNumber = 5,
                            EndTime = new TimeOnly(18, 0, 0),
                            StartTime = new TimeOnly(10, 0, 0)
                        },
                        new
                        {
                            Day = 0,
                            EmployeeNumber = 5,
                            EndTime = new TimeOnly(17, 0, 0),
                            StartTime = new TimeOnly(9, 0, 0)
                        });
                });

            modelBuilder.Entity("BumboApp.Models.UniqueDay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<float>("Factor")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("UniqueDays", t =>
                        {
                            t.HasCheckConstraint("CK_UniqueDays_StartDate_EndDate", "[StartDate] <= [EndDate]");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndDate = new DateOnly(2024, 12, 24),
                            Factor = 1.25f,
                            Name = "Kerstavond",
                            StartDate = new DateOnly(2024, 12, 24)
                        },
                        new
                        {
                            Id = 2,
                            EndDate = new DateOnly(2025, 1, 19),
                            Factor = 1.8f,
                            Name = "Weekend uitverkoop",
                            StartDate = new DateOnly(2025, 1, 18)
                        },
                        new
                        {
                            Id = 3,
                            EndDate = new DateOnly(2025, 1, 23),
                            Factor = 1.5f,
                            Name = "Donderende donderdag korting",
                            StartDate = new DateOnly(2025, 1, 23)
                        },
                        new
                        {
                            Id = 4,
                            EndDate = new DateOnly(2025, 1, 27),
                            Factor = 0.8f,
                            Name = "Blauwe maandag",
                            StartDate = new DateOnly(2025, 1, 27)
                        });
                });

            modelBuilder.Entity("BumboApp.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "2ab03136-c316-4b70-a7fc-4c9cb044a6be",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "static-concurrency-stamp",
                            Email = "john.doe@example.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "JOHN.DOE@EXAMPLE.COM",
                            NormalizedUserName = "JOHN.DOE@EXAMPLE.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEHElifiD+iCmgFS/WCucV8tMzAcHwDdy1B4kwXCYsxB7xOwvRsxjkQbdJ6YrI77xDA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "static-security-stamp",
                            TwoFactorEnabled = false,
                            UserName = "john.doe@example.com"
                        },
                        new
                        {
                            Id = "12544476-38da-4113-9c40-4bc508f8c0f2",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "static-concurrency-stamp",
                            Email = "jane.smith@example.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "JANE.SMITH@EXAMPLE.COM",
                            NormalizedUserName = "JANE.SMITH@EXAMPLE.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEGk4lj3QRvRZzy4Oas9sTTW0A2nJ1X41eB0uiNnGNFQT7RdiOs/FLSjxWz/x4KDk+w==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "static-security-stamp",
                            TwoFactorEnabled = false,
                            UserName = "jane.smith@example.com"
                        },
                        new
                        {
                            Id = "2667ab01-7225-451b-adbb-c99eea968d02",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "static-concurrency-stamp",
                            Email = "emily.jones@example.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "EMILY.JONES@EXAMPLE.COM",
                            NormalizedUserName = "EMILY.JONES@EXAMPLE.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEHv/0P6Xoo7fFyIXoIwA78DUHxHCFNYGaR8vPnMjmnx+QoW0Khto6+ptFaVzpYAWFw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "static-security-stamp",
                            TwoFactorEnabled = false,
                            UserName = "emily.jones@example.com"
                        },
                        new
                        {
                            Id = "a60c8f93-cb79-441e-8ec9-627d8a679ff3",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "static-concurrency-stamp",
                            Email = "bob.square@example.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "BOB.SQUARE@EXAMPLE.COM",
                            NormalizedUserName = "BOB.SQUARE@EXAMPLE.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEHv/0P6Xoo7fFyIXoIwA78DUHxHCFNYGaR8vPnMjmnx+QoW0Khto6+ptFaVzpYAWFw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "static-security-stamp",
                            TwoFactorEnabled = false,
                            UserName = "bob.square@example.com"
                        },
                        new
                        {
                            Id = "4b26e441-e63a-497e-82da-3b629212431b",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "static-concurrency-stamp",
                            Email = "IkHoudVanPaul@example.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "IKHOUDVANPAUL@EXAMPLE.COM",
                            NormalizedUserName = "IKHOUDVANPAUL@EXAMPLE.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEHv/0P6Xoo7fFyIXoIwA78DUHxHCFNYGaR8vPnMjmnx+QoW0Khto6+ptFaVzpYAWFw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "static-security-stamp",
                            TwoFactorEnabled = false,
                            UserName = "IkHoudVanPaul@example.com"
                        });
                });

            modelBuilder.Entity("BumboApp.Models.WeekPrognosis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("StartDate")
                        .IsUnique();

                    b.ToTable("WeekPrognoses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            StartDate = new DateOnly(2025, 1, 6)
                        },
                        new
                        {
                            Id = 2,
                            StartDate = new DateOnly(2025, 1, 13)
                        },
                        new
                        {
                            Id = 3,
                            StartDate = new DateOnly(2025, 1, 20)
                        });
                });

            modelBuilder.Entity("BumboApp.Models.WorkedHour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("DateOnly")
                        .HasColumnType("date");

                    b.Property<int>("EmployeeNumber")
                        .HasColumnType("int");

                    b.Property<TimeOnly?>("EndTime")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeNumber");

                    b.ToTable("WorkedHours");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOnly = new DateOnly(2024, 12, 2),
                            EmployeeNumber = 2,
                            EndTime = new TimeOnly(17, 10, 0),
                            StartTime = new TimeOnly(9, 15, 0),
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            DateOnly = new DateOnly(2024, 12, 3),
                            EmployeeNumber = 2,
                            EndTime = new TimeOnly(18, 5, 0),
                            StartTime = new TimeOnly(10, 5, 0),
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            DateOnly = new DateOnly(2024, 12, 4),
                            EmployeeNumber = 2,
                            EndTime = new TimeOnly(16, 5, 0),
                            StartTime = new TimeOnly(8, 10, 0),
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            DateOnly = new DateOnly(2024, 12, 5),
                            EmployeeNumber = 2,
                            EndTime = new TimeOnly(19, 15, 0),
                            StartTime = new TimeOnly(11, 10, 0),
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            DateOnly = new DateOnly(2024, 12, 6),
                            EmployeeNumber = 2,
                            EndTime = new TimeOnly(17, 5, 0),
                            StartTime = new TimeOnly(9, 5, 0),
                            Status = 1
                        },
                        new
                        {
                            Id = 6,
                            DateOnly = new DateOnly(2024, 12, 2),
                            EmployeeNumber = 3,
                            EndTime = new TimeOnly(17, 20, 0),
                            StartTime = new TimeOnly(9, 10, 0),
                            Status = 1
                        },
                        new
                        {
                            Id = 7,
                            DateOnly = new DateOnly(2024, 12, 3),
                            EmployeeNumber = 3,
                            EndTime = new TimeOnly(18, 5, 0),
                            StartTime = new TimeOnly(10, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            Id = 8,
                            DateOnly = new DateOnly(2024, 12, 4),
                            EmployeeNumber = 3,
                            EndTime = new TimeOnly(16, 10, 0),
                            StartTime = new TimeOnly(8, 5, 0),
                            Status = 1
                        },
                        new
                        {
                            Id = 9,
                            DateOnly = new DateOnly(2024, 12, 5),
                            EmployeeNumber = 3,
                            EndTime = new TimeOnly(19, 0, 0),
                            StartTime = new TimeOnly(11, 10, 0),
                            Status = 1
                        },
                        new
                        {
                            Id = 10,
                            DateOnly = new DateOnly(2024, 12, 6),
                            EmployeeNumber = 3,
                            EndTime = new TimeOnly(17, 10, 0),
                            StartTime = new TimeOnly(9, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            Id = 11,
                            DateOnly = new DateOnly(2024, 12, 9),
                            EmployeeNumber = 2,
                            EndTime = new TimeOnly(17, 15, 0),
                            StartTime = new TimeOnly(9, 20, 0),
                            Status = 0
                        },
                        new
                        {
                            Id = 12,
                            DateOnly = new DateOnly(2024, 12, 10),
                            EmployeeNumber = 2,
                            EndTime = new TimeOnly(18, 10, 0),
                            StartTime = new TimeOnly(10, 10, 0),
                            Status = 0
                        },
                        new
                        {
                            Id = 13,
                            DateOnly = new DateOnly(2024, 12, 11),
                            EmployeeNumber = 2,
                            EndTime = new TimeOnly(16, 10, 0),
                            StartTime = new TimeOnly(8, 20, 0),
                            Status = 0
                        },
                        new
                        {
                            Id = 14,
                            DateOnly = new DateOnly(2024, 12, 12),
                            EmployeeNumber = 2,
                            EndTime = new TimeOnly(19, 20, 0),
                            StartTime = new TimeOnly(11, 15, 0),
                            Status = 0
                        },
                        new
                        {
                            Id = 15,
                            DateOnly = new DateOnly(2024, 12, 13),
                            EmployeeNumber = 2,
                            EndTime = new TimeOnly(17, 10, 0),
                            StartTime = new TimeOnly(9, 15, 0),
                            Status = 0
                        },
                        new
                        {
                            Id = 16,
                            DateOnly = new DateOnly(2024, 12, 9),
                            EmployeeNumber = 3,
                            EndTime = new TimeOnly(17, 20, 0),
                            StartTime = new TimeOnly(9, 15, 0),
                            Status = 0
                        },
                        new
                        {
                            Id = 17,
                            DateOnly = new DateOnly(2024, 12, 10),
                            EmployeeNumber = 3,
                            EndTime = new TimeOnly(18, 10, 0),
                            StartTime = new TimeOnly(10, 15, 0),
                            Status = 0
                        },
                        new
                        {
                            Id = 18,
                            DateOnly = new DateOnly(2024, 12, 11),
                            EmployeeNumber = 3,
                            EndTime = new TimeOnly(16, 15, 0),
                            StartTime = new TimeOnly(8, 10, 0),
                            Status = 0
                        },
                        new
                        {
                            Id = 19,
                            DateOnly = new DateOnly(2024, 12, 12),
                            EmployeeNumber = 3,
                            EndTime = new TimeOnly(19, 10, 0),
                            StartTime = new TimeOnly(11, 20, 0),
                            Status = 0
                        },
                        new
                        {
                            Id = 20,
                            DateOnly = new DateOnly(2024, 12, 13),
                            EmployeeNumber = 3,
                            EndTime = new TimeOnly(17, 20, 0),
                            StartTime = new TimeOnly(9, 10, 0),
                            Status = 0
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "dc065cdc-e1d7-4202-936a-fbf03070c74d",
                            Name = "Manager",
                            NormalizedName = "MANAGER"
                        },
                        new
                        {
                            Id = "4cd8ce88-df2a-49fb-ac51-0610e1be0f0b",
                            Name = "Employee",
                            NormalizedName = "EMPLOYEE"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "2ab03136-c316-4b70-a7fc-4c9cb044a6be",
                            RoleId = "dc065cdc-e1d7-4202-936a-fbf03070c74d"
                        },
                        new
                        {
                            UserId = "12544476-38da-4113-9c40-4bc508f8c0f2",
                            RoleId = "4cd8ce88-df2a-49fb-ac51-0610e1be0f0b"
                        },
                        new
                        {
                            UserId = "2667ab01-7225-451b-adbb-c99eea968d02",
                            RoleId = "4cd8ce88-df2a-49fb-ac51-0610e1be0f0b"
                        },
                        new
                        {
                            UserId = "a60c8f93-cb79-441e-8ec9-627d8a679ff3",
                            RoleId = "4cd8ce88-df2a-49fb-ac51-0610e1be0f0b"
                        },
                        new
                        {
                            UserId = "4b26e441-e63a-497e-82da-3b629212431b",
                            RoleId = "4cd8ce88-df2a-49fb-ac51-0610e1be0f0b"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("BumboApp.Models.Availability", b =>
                {
                    b.HasOne("BumboApp.Models.Employee", "Employee")
                        .WithMany("Availabilities")
                        .HasForeignKey("EmployeeNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("BumboApp.Models.Break", b =>
                {
                    b.HasOne("BumboApp.Models.WorkedHour", "WorkedHour")
                        .WithMany("Breaks")
                        .HasForeignKey("WorkedHourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkedHour");
                });

            modelBuilder.Entity("BumboApp.Models.Employee", b =>
                {
                    b.HasOne("BumboApp.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BumboApp.Models.LeaveRequest", b =>
                {
                    b.HasOne("BumboApp.Models.Employee", "Employee")
                        .WithMany("leaveRequests")
                        .HasForeignKey("EmployeeNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("BumboApp.Models.Notification", b =>
                {
                    b.HasOne("BumboApp.Models.Employee", "Employee")
                        .WithMany("notifications")
                        .HasForeignKey("EmployeeNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("BumboApp.Models.Prognosis", b =>
                {
                    b.HasOne("BumboApp.Models.WeekPrognosis", null)
                        .WithMany("Prognoses")
                        .HasForeignKey("WeekPrognosisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BumboApp.Models.SchoolSchedule", b =>
                {
                    b.HasOne("BumboApp.Models.Employee", "Employee")
                        .WithMany("SchoolSchedules")
                        .HasForeignKey("EmployeeNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("BumboApp.Models.Shift", b =>
                {
                    b.HasOne("BumboApp.Models.Employee", "Employee")
                        .WithMany("Shifts")
                        .HasForeignKey("EmployeeNumber");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("BumboApp.Models.ShiftTakeOver", b =>
                {
                    b.HasOne("BumboApp.Models.Employee", "EmployeeTakingOver")
                        .WithMany("shiftTakeOvers")
                        .HasForeignKey("EmployeeTakingOverEmployeeNumber");

                    b.HasOne("BumboApp.Models.Shift", "Shift")
                        .WithOne("ShiftTakeOver")
                        .HasForeignKey("BumboApp.Models.ShiftTakeOver", "ShiftId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("EmployeeTakingOver");

                    b.Navigation("Shift");
                });

            modelBuilder.Entity("BumboApp.Models.SickLeave", b =>
                {
                    b.HasOne("BumboApp.Models.Employee", "Employee")
                        .WithMany("sickLeaves")
                        .HasForeignKey("EmployeeNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("BumboApp.Models.StandardAvailability", b =>
                {
                    b.HasOne("BumboApp.Models.Employee", "Employee")
                        .WithMany("StandardAvailability")
                        .HasForeignKey("EmployeeNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("BumboApp.Models.WorkedHour", b =>
                {
                    b.HasOne("BumboApp.Models.Employee", "Employee")
                        .WithMany("WorkedHours")
                        .HasForeignKey("EmployeeNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("BumboApp.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("BumboApp.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BumboApp.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("BumboApp.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BumboApp.Models.Employee", b =>
                {
                    b.Navigation("Availabilities");

                    b.Navigation("SchoolSchedules");

                    b.Navigation("Shifts");

                    b.Navigation("StandardAvailability");

                    b.Navigation("WorkedHours");

                    b.Navigation("leaveRequests");

                    b.Navigation("notifications");

                    b.Navigation("shiftTakeOvers");

                    b.Navigation("sickLeaves");
                });

            modelBuilder.Entity("BumboApp.Models.Shift", b =>
                {
                    b.Navigation("ShiftTakeOver")
                        .IsRequired();
                });

            modelBuilder.Entity("BumboApp.Models.WeekPrognosis", b =>
                {
                    b.Navigation("Prognoses");
                });

            modelBuilder.Entity("BumboApp.Models.WorkedHour", b =>
                {
                    b.Navigation("Breaks");
                });
#pragma warning restore 612, 618
        }
    }
}
