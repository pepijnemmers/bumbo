@using BumboApp.Views.Components
@using Microsoft.Data.SqlClient
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model BumboApp.ViewModels.OpeningHoursViewModel
@{
    ViewData["Title"] = "Openingstijden en speciale dagen";
}

<div class=" row">
    <div class="col-12 col-xl-7">
        <form class="table-container" id="opening-hours-form" asp-action="Update" method="post">
            <h3 class="p-3">Openingstijden</h3>
            @if (Model.OpeningHours.Count != 7)
            {
                <div class="alert alert-danger m-3 mt-0" role="alert">
                    Er is een fout opgetreden bij het ophalen van de openingstijden. Probeer het later opnieuw.
                </div>
            }
            else
            {
                <table class="table">
                    <tbody>
                    @for (int i = 0; i < 7; i++)
                    {
                        DayOfWeek day = (DayOfWeek)((i + 1) % 7); // Start with Monday
                        var openingHours = Model.OpeningHours.SingleOrDefault(h => h.WeekDay == day);
                        var isOpen = openingHours?.OpeningTime != null;
                        <tr class="align-middle">
                            <td>
                                <div class="form-check form-switch">
                                    <input class="d-none form-check-input" type="checkbox" role="switch" id="opening-hours-switch-@i" onchange="toggleDay(@i, this.checked)" @(isOpen ? "checked" : "") disabled/>
                                    <input type="hidden" name="OpeningHours[@Model.OpeningHours.IndexOf(openingHours)].WeekDay" value="@openingHours.WeekDay"/>
                                    <p>@Model.DutchDays[(i + 1) % 7]</p>
                                </div>
                            </td>
                            <td>
                                <div class="@(isOpen ? "d-table-cell" : "d-none")" id="opening-hours-field-@i">
                                    <label for="opening-hour-@i">Vanaf</label>
                                    <div class="d-inline-block" id="opening-hour-text-@i">@openingHours.OpeningTime</div>
                                    <input class="d-none" id="opening-hour-@i" type="time" name="OpeningHours[@Model.OpeningHours.IndexOf(openingHours)].OpeningTime" value="@openingHours.OpeningTime"/>
                                </div>
                                <div class="@(isOpen ? "d-none" : "d-block")" id="closedText-@i">
                                    <p>Gesloten</p>
                                </div>
                            </td>
                            <td>
                                <div class="@(isOpen ? "d-table-cell" : "d-none")" id="closing-hours-field-@i">
                                    <label for="closingHour-@i">tot</label>
                                    <div class="d-inline-block" id="closing-hour-text-@i">@openingHours.ClosingTime</div>
                                    <input class="d-none" id="closing-hour-@i" type="time" name="OpeningHours[@Model.OpeningHours.IndexOf(openingHours)].ClosingTime" value="@openingHours.ClosingTime"/>
                                </div>
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
                <div class="opening-hours-buttons-class d-flex justify-content-end p-3" id="opening-hours-buttons">
                    <a class="btn btn-primary mx-2" id="opening-hours-edit-button">bewerken</a>
                    <button type="submit" class="btn btn-primary">Opslaan</button>
                </div>
            }
        </form>
    </div>
    <div class="col-12 col-xl-5">
        <div class=" table-container">
            <div class="pt-3 ps-3">
                <h3>Speciale dagen</h3>
                <p>Prognose wordt vermenigvuldigd met de factor</p>
            </div>
            <table class="table">
                <thead>
                    <tr>
                        <th>Naam</th>
                        <th class="col-5">
                            <a asp-controller="OpeningHours"
                               asp-action="Index"
                               asp-route-OrderBy="@(ViewBag.OrderBy == SortOrder.Ascending ? SortOrder.Descending : SortOrder.Ascending)"
                               asp-route-OldDays="@ViewBag.OldDays"
                               class="text-decoration-none text-dark d-flex align-items-center">
                                <div class="me-2">
                                    Startdatum <br/>
                                    Einddatum
                                </div>
                                <img width="20px" src="~/img/chevron-@(ViewBag.OrderBy == SortOrder.Ascending ? "down" : "up").svg" alt="Arrow" />
                            </a>
                        </th>
                        <th class=" col-3">Factor</th>
                        <th>Acties</th>
                    </tr>
                </thead>
                <tbody>
                @if (!Model.UniqueDays.Any())
                {
                    <!-- Display this alert if there are unique days -->
                    <tr>
                        <td colspan="100%" class="text-center">Er zijn geen Speciale dagen</td>
                    </tr>
                }
                else
                {
                    @foreach (var item in Model.UniqueDays)
                    {
                        <tr>
                            <td>
                                @item.Name
                            </td>
                            <td class=" col-5">
                                @item.StartDate <br>
                                @item.EndDate
                            </td>
                            <td class=" col-3">
                                @item.Factor
                            </td>
                            <td>
                                @if (item.StartDate > DateOnly.FromDateTime(DateTime.Now))
                                {
                                    <a asp-controller="UniqueDays" asp-action="Edit" asp-route-id="@item.Id">
                                        <img width="20px" src="~/img/update-icon.svg" alt="Alternate Text" />
                                    </a>
                                }
                                else
                                {
                                    <span>-</span>
                                }
                            </td>
                        </tr>
                    }
                }
                </tbody>
            </table>
                
            @if (ViewBag.MaxPages > 1)
            {
                <Component type="typeof(Pagination)"
                           render-mode="ServerPrerendered"
                           param-PageNumber="ViewBag.PageNumber"
                           param-MaxPages="ViewBag.MaxPages" />
            }

            <div class="d-flex justify-content-end p-3">
                <a asp-controller="OpeningHours" asp-action="Index" asp-route-OldDays="@(!ViewBag.OldDays)" class="btn btn-outline-primary mx-2">
                    @(ViewBag.OldDays ? "Toekomstige dagen bekijken" : "Oude dagen bekijken")
                </a>
                <a asp-controller="UniqueDays" asp-action="Add" class="btn btn-primary">Toevoegen</a>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script>
        document.getElementById('opening-hours-edit-button').addEventListener('click', function () {
            const div = document.getElementById('opening-hours-buttons');
            div.classList.toggle('opening-hours-buttons-class');
            const link = document.querySelector('#opening-hours-buttons a');
            link.classList.toggle('btn-outline-primary');
            link.classList.toggle('btn-primary');
            link.innerHTML = link.innerHTML.toLowerCase() === 'bewerken' ? 'annuleren' : 'bewerken';

            for (let i = 0; i < 7; i++) {
                const hoursSwitch = document.getElementById(`opening-hours-switch-${i}`);
                const openingHour = document.getElementById(`opening-hour-${i}`);
                const openingHourText = document.getElementById(`opening-hour-text-${i}`);
                const closingHour = document.getElementById(`closing-hour-${i}`);
                const closingHourText = document.getElementById(`closing-hour-text-${i}`);

                const isEditable = !hoursSwitch.disabled;
                toggleDisplay(openingHour, openingHourText, isEditable);
                toggleDisplay(closingHour, closingHourText, isEditable);

                hoursSwitch.disabled = isEditable;
                hoursSwitch.classList.toggle('d-none', isEditable);
            }
        });

        function toggleDisplay(inputField, textField, isEditable) {
            inputField.classList.toggle('d-none', isEditable);
            textField.classList.toggle('d-none', !isEditable);
        }

        function toggleDay(id, isActive) {
            const openingField = document.getElementById(`opening-hours-field-${id}`);
            const closingField = document.getElementById(`closing-hours-field-${id}`);
            const closedText = document.getElementById(`closedText-${id}`);

            openingField.classList.toggle('d-none', !isActive);
            closingField.classList.toggle('d-none', !isActive);
            closedText.classList.toggle('d-none', isActive);

            const openingHourElement = document.getElementById(`opening-hour-${id}`);
            const closingHourElement = document.getElementById(`closing-hour-${id}`);
            if (!isActive) {
                const openingHour = openingHourElement.value = null;
                const closingHour = closingHourElement.value = null;
            } else {
                const openingTime = new Date();
                openingTime.setHours(8, 0);
                openingHourElement.value = openingTime.toTimeString().slice(0, 5);

                const closingTime = new Date();
                closingTime.setHours(21, 0);
                closingHourElement.value = closingTime.toTimeString().slice(0, 5);
            }
        }
    </script>
}