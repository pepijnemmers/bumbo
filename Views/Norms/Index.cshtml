@model BumboApp.ViewModels.NormsViewModel
@{
    ViewData["Title"] = "Normeringen";
}
<div class="container">
    <div class="table-container latest-norms-table col-12 col-lg-6">
        <table class="table">
            <thead>
                <tr>
                    <th scope="col">Activiteiten</th>
                    <th scope="col">Norm</th>
                    <th scope="col"></th>
                </tr>
            </thead>
            <tbody>
                @if ((Model.LatestNormsList != null && Model.LatestNormsList.Any()))
                {
                    foreach (var item in Model.LatestNormsList)
                    {
                        <tr>
                            <th scope="row">@item.Activity.ToFriendlyString()</th>
                            <td>@item.Value</td>
                            <td><b>@item.NormType.ToFriendlyString()</b></td>
                        </tr>
                    }
                }
                else
                {
                    foreach (NormActivity activity in Enum.GetValues(typeof(NormActivity)))
                    {
                        <tr>
                            <th scope="row">@activity.ToFriendlyString()</th>
                            <td>...</td>
                            <td>
                                <b>
                                    @switch (activity)
                                    {
                                        case NormActivity.ColiUitladen:
                                            @NormType.Minutes.ToFriendlyString()
                                            ;
                                            break;
                                        case NormActivity.VakkenVullen:
                                            @NormType.MinutesPerColi.ToFriendlyString()
                                            ;
                                            break;
                                        case NormActivity.Kassa:
                                            @NormType.CustomersPerHour.ToFriendlyString()
                                            ;
                                            break;
                                        case NormActivity.Vers:
                                            @NormType.CustomersPerHour.ToFriendlyString()
                                            ;
                                            break;
                                        default:
                                            @NormType.SecondsPerMeter.ToFriendlyString()
                                            ;
                                            break;
                                    }
                                </b>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
        <div class="edit-button">
            <a asp-controller="Norms" class="btn btn-primary btn-sm">Bewerken</a>
        </div>
    </div>

    <div class="table-container all-norms-table">
        <table class="table">
            <thead>
                <tr>
                    <th scope="col">Datum</th>
                    <th scope="col">Coli uitladen</th>
                    <th scope="col">Vakken vullen</th>
                    <th scope="col">Kassa</th>
                    <th scope="col">Vers</th>
                    <th scope="col">Spiegelen</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.NormsList.Any())
                {
                    @foreach (var item in Model.NormsList.GroupBy(i => i.CreatedAt))
                    {
                        <tr>
                            <td>@item.Key.ToShortDateString()</td>
                            <td>
                                @foreach (var activityItem in item.Where(i => i.Activity == NormActivity.ColiUitladen))
                                {
                                    <p>@activityItem.Value</p>
                                }
                            </td>
                            <td>
                                @foreach (var activityItem in item.Where(i => i.Activity == NormActivity.VakkenVullen))
                                {
                                    <p>@activityItem.Value</p>
                                }
                            </td>
                            <td>
                                @foreach (var activityItem in item.Where(i => i.Activity == NormActivity.Kassa))
                                {
                                    <p>@activityItem.Value</p>
                                }
                            </td>
                            <td>
                                @foreach (var activityItem in item.Where(i => i.Activity == NormActivity.Vers))
                                {
                                    <p>@activityItem.Value</p>
                                }
                            </td>
                            <td>
                                @foreach (var activityItem in item.Where(i => i.Activity == NormActivity.Spiegelen))
                                {
                                    <p>@activityItem.Value</p>
                                }
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="100%" class="text-center">Er zijn geen eerdere normeringen</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>