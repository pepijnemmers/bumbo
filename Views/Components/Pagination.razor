@inject NavigationManager Navigation
@using Microsoft.AspNetCore.WebUtilities

@code {
    [Parameter]
    public required int PageNumber { get; set; }

    [Parameter]
    public required int MaxPages { get; set; }
    
    [Parameter]
    public string QueryName { get; set; } = "page";

    private string GenerateUrl(int page)
    {
        var uri = new Uri(Navigation.Uri);
        var query = QueryHelpers.ParseQuery(uri.Query);

        var queryParams = query.ToDictionary(kvp => kvp.Key, kvp => kvp.Value.ToString());
        queryParams[QueryName] = page.ToString();
        var newQuery = string.Join("&", queryParams.Select(kvp => $"{kvp.Key}={kvp.Value}"));

        return $"?{newQuery}";
    }
}

<nav aria-label="Page navigation">
    <ul class="pagination justify-content-end px-3">
        <li class="page-item @(PageNumber == 1 ? "disabled" : "")">
            <a class="page-link" href="@GenerateUrl(1)" aria-label="begin">
                <span aria-hidden="true">&laquo;</span>
            </a>
        </li>
        <li class="page-item @(PageNumber == 1 ? "disabled" : "")">
            <a class="page-link" href="@GenerateUrl(PageNumber - 1)" aria-label="Previous">
                <span aria-hidden="true">&lsaquo;</span>
            </a>
        </li>
        
        @if (MaxPages < 4)
        {
            @for (int i = 1; i <= MaxPages; i++)
            {
                <li class="page-item @(PageNumber == i ? "active" : "")">
                    <a class="page-link" href="@GenerateUrl(i)">@i</a>
                </li>
            }
        }
        else
        {
            @for (int i = 1; i <= MaxPages; i++)
            {
                // always show first
                if (i == 1)
                {
                    <li class="page-item @(PageNumber == 1 ? "active" : "")">
                        <a class="page-link" href="@GenerateUrl(1)">1</a>
                    </li>
                }
                // always show ...
                else if (i == MaxPages - 1)
                {
                    <li class="page-item">
                        <div>
                            <select class="page-link" style="padding: .4rem .75rem" onchange="location.href=this.value">
                                <option disabled selected>...</option>
                                @for (int j = 1; j <= MaxPages; j++)
                                {
                                    <option value="@GenerateUrl(j)">@j</option>
                                }
                            </select>
                        </div>
                    </li>
                    
                    if (PageNumber == MaxPages - 1)
                    {
                        <li class="page-item active">
                            <a class="page-link" href="@GenerateUrl(i)">@i</a>
                        </li>
                    }
                }
                // always show current
                else if (i == PageNumber)
                {
                    <li class="page-item active">
                        <a class="page-link" href="@GenerateUrl(i)">@i</a>
                    </li>
                }
                // always show last
                else if (i == MaxPages)
                {
                    <li class="page-item">
                        <a class="page-link" href="@GenerateUrl(MaxPages)">@MaxPages</a>
                    </li>
                }
            }
        }
        
        <li class="page-item @(PageNumber == MaxPages ? "disabled" : "")">
            <a class="page-link" href="@GenerateUrl(PageNumber + 1)" aria-label="next">
                <span aria-hidden="true">&rsaquo;</span>
            </a>
        </li>
        <li class="page-item @(PageNumber == MaxPages ? "disabled" : "")">
            <a class="page-link" href="@GenerateUrl(MaxPages)" aria-label="last">
                <span aria-hidden="true">&raquo;</span>
            </a>
        </li>
    </ul>
</nav>
